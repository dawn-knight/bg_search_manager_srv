<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd">

<!-- 对js、css、img、assets不进行拦截 -->             
 <http pattern="/js/**" security="none"/>  
 <http pattern="/css/**" security="none"/>  
 <http pattern="/images/**" security="none"/>  
 <http pattern="/common/**" security="none"/>  
 <http pattern="/error/**" security="none"/>  
<!--  对login.html以及login.html后面带参数的不拦截     -->
<http pattern="/login.jsp*" security="none" />
    
<!-- use-expressions="true" 页面可以使用表达式 access-denied-page 出错后跳转的页面 -->
<http auto-config="true" use-expressions="true" access-denied-page="/common/accessDenid.jsp">
<form-login login-page="/login.jsp" always-use-default-target="true"
 default-target-url="/login/successLogin"
 authentication-failure-url="/login.jsp?error=true"
 />
 
 <logout invalidate-session="true" logout-success-url="/login.jsp" logout-url="/j_spring_security_logout"/>
 
<!--  <session-management 针对session的管理 id登录唯一 后登陆的帐号会挤掉第一次登录的帐号 -->
<!--   error-if-maximum-exceeded="true" 禁止二次登录 session-fixation-protection="none"  -->
<!--   防止伪造session登录用户登录后会销毁当前session 创建新的session -->
 <session-management invalid-session-url="/common/sessionTimeout.jsp" session-fixation-protection="none">  
            <concurrency-control max-sessions="10" error-if-maximum-exceeded="true" />  
</session-management>  
  <custom-filter ref="myFilter" before="FILTER_SECURITY_INTERCEPTOR"/> 
</http>

<beans:bean id="myFilter" class="com.mbgo.searchmgr.core.security.impl.CustomSecurityFilterImpl">  
        <!-- 用户拥有的权限 -->  
        <beans:property name="authenticationManager" ref="myAuthenticationManager" />  
        <!-- 用户是否拥有所请求资源的权限 -->  
        <beans:property name="accessDecisionManager" ref="myAccessDecisionManager" />  
        <!-- 资源与权限对应关系 -->  
        <beans:property name="securityMetadataSource" ref="mySecurityMetadataSource" />  
</beans:bean> 


 <!-- 实现了UserDetailsService的Bean -->  
    <authentication-manager alias="myAuthenticationManager">  
        <authentication-provider user-service-ref="myUserDetailService" />  
    </authentication-manager>  
    <beans:bean id="myAccessDecisionManager" class="com.mbgo.searchmgr.core.security.impl.AccessDecisionManagerImpl"></beans:bean>  
    <beans:bean id="mySecurityMetadataSource" class="com.mbgo.searchmgr.core.security.impl.SecurityMetadataSourceImpl">  
    </beans:bean>  

<authentication-manager>
<authentication-provider user-service-ref="myUserDetailService">
<!-- <authentication-provider> -->
<!-- <user-service> -->
<!-- <user name="admin" password="admin" authorities="ROLE_ADMIN"/> -->
<!-- </user-service> -->
<!-- </authentication-provider> -->
</authentication-provider>
</authentication-manager>

<beans:bean id="myUserDetailService"
		class="com.mbgo.searchmgr.core.security.impl.UserDetailsServiceimpl">
</beans:bean>

</beans:beans>

